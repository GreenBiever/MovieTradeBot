import abc
import logging
from dataclasses import dataclass
from typing import Type
import io

from aiogram.fsm.state import StatesGroup, State

from app_dependency import dp as Dispatcher
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message, \
    InputMediaPhoto, FSInputFile, BufferedInputFile
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram_toolbet.exceptions.menu import StopRender
from aiogram_toolbet.menu.base import DynamicMenu
from aiogram_toolbet.menu.meta import MenuHook
from aiogram_toolbet.menu.state_var import StateVar
from databases.models import DrawingCategoryAllowedUsers
from drawing.base import TicketTemplateT
from drawing.payment_system import PaymentSystemRefundSuccessTemplate, \
    PaymentSystemNonEquivalently, PaymentSystemTransactionRestricted, PaymentSystemUnknownError, \
    PaymentSystemCardNotSupported, PaymentSystemIncorrectOrderNumber
from drawing.support_scripts import DefaultGuaranteeLetterTemplate, CbGuaranteeLetterTemplate, RefundStatusTemplate
from drawing.ticket_generator import CinemaTicket, TheatreTicket, ExhibitionTicket, StandupTicket
from drawing.tinkoff import TinkoffIncomePaymentTemplate, TinkoffOutgoingPaymentTemplate
from drawing.worker_support import SupportMessageWithoutHashtagTemplate, SupportMessageWithRedundantHashtagTemplate, \
    SupportRefundTermsTemplate, SupportWithoutOrderNumberTemplate
from users.role.default import UserRoles
from users.role.role import UserRole
from users.user import User

WAITING_TICKET_DATA = "DrawWizard:WAITING_TICKET_DATA"


class TemplateState(StatesGroup):
    key = State()
    valute = State()


@dataclass
class DrawingTemplate:
    template_drawer_cls: Type[TicketTemplateT]
    description: str
    name: str
    preview_images: list[str] = None


class DrawingTemplateWithRestrictedAccess(DrawingTemplate):

    @abc.abstractmethod
    async def check_access(self, **context) -> bool:
        raise NotImplemented


@dataclass
class DrawingTemplateRestrictedByRole(DrawingTemplateWithRestrictedAccess):
    """
    Use a star notation instead list to match any role
    """
    role_id_list: list[int] | str = '*'

    async def check_access(self, session: AsyncSession, user: User, **context) -> bool:
        user_role: UserRole = await user.get_role(session)
        if type(self.role_id_list) == str and self.role_id_list == '*':
            return True

        return user_role.id in self.role_id_list


@dataclass
class TemplateCategory:
    id: int
    name: str
    templates: dict[str, DrawingTemplateRestrictedByRole]


class TemplateCategoryWithRestrictedAccess(TemplateCategory):

    @abc.abstractmethod
    async def check_access(self, **context) -> bool:
        raise NotImplemented


@dataclass
class TemplateCategoryRestrictedByUserID(TemplateCategoryWithRestrictedAccess):

    async def check_access(self, user: User, session: AsyncSession, **context) -> bool:
        res = await DrawingCategoryAllowedUsers.exists(
            category_id=self.id,
            user_id=user.id,
            session=session
        )
        return res


@dataclass
class TemplateCategoryRestrictedByRole(TemplateCategoryWithRestrictedAccess):
    """
    Use a star notation instead list to match any role
    """
    role_id_list: list[int] | str = '*'

    async def check_access(self, session: AsyncSession, user: User, **context) -> bool:
        user_role: UserRole = await user.get_role(session)
        if type(self.role_id_list) == str and self.role_id_list == '*':
            return True

        return user_role.id in self.role_id_list


class DrawWizardMenu(DynamicMenu):
    static_text = '*üé® –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é*'
    callback_key = 'draw_wizard'
    parse_mode = 'MARKDOWNV2'
    # images = ['assets/img/gui/draw_wizard_logo.jpg']

    selected_ticket_template = StateVar('draw_wizard_selected_ticket_template', default='–Ω–µ –≤—ã–±—Ä–∞–Ω')
    categories: dict[str, TemplateCategoryRestrictedByRole] = {
        category.name: category
        for category in [
            TemplateCategoryRestrictedByRole(
                id=1,
                name='üéü –ë–∏–ª–µ—Ç—ã',
                templates={
                    'cinema': DrawingTemplateRestrictedByRole(
                        CinemaTicket,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –ö–æ–º–Ω–∞—Ç–∞\n"
                        "üìå –°—Ç–æ–∏–º–æ—Å—Ç—å\n"
                        "üìå –î–∞—Ç–∞\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`–†–æ–∑–æ–≤–∞—è\n2490\n25 –º–∞—è, 19:00`",

                        'üé• –ö–∏–Ω–æ'
                    ),
                    'theatre_new': DrawingTemplateRestrictedByRole(
                        TheatreTicket,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –°–ø–µ–∫—Ç–∞–∫–ª—å\n"
                        "üìå –°—Ç–æ–∏–º–æ—Å—Ç—å\n"
                        "üìå –ú–µ—Å—Ç–æ\n"
                        "üìå –î–∞—Ç–∞\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`–ì–æ—Ä–≥–æ–Ω—ã\n2490\n5 —Ä—è–¥, 9 –º–µ—Å—Ç–æ\n25 –º–∞—è, 19:00`",

                        'üé≠ –¢–µ–∞—Ç—Ä'
                    ),
                    'exhibitions': DrawingTemplateRestrictedByRole(
                        ExhibitionTicket,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã—Å—Ç–∞–≤–∫–∏\n"
                        "üìå –°—Ç–æ–∏–º–æ—Å—Ç—å\n"
                        "üìå –î–∞—Ç–∞\n"
                        "üìå –í—Ä–µ–º—è\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`–õ—é–¥–∏ –∏ –ö–æ—Å–º–æ—Å\n2490\n25.09.2023\n19:00`",

                        'üè∫ –í—ã—Å—Ç–∞–≤–∫–∏'
                    ),
                    'standup': DrawingTemplateRestrictedByRole(
                        StandupTicket,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n"
                        "üìå –°—Ç–æ–∏–º–æ—Å—Ç—å\n"
                        "üìå –î–∞—Ç–∞\n"
                        "üìå –í—Ä–µ–º—è\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`–ù—É—Ä–ª–∞–Ω –°–∞–±—É—Ä–æ–≤\n2490\n25.09.2023\n19:00`",

                        'üé§ –°—Ç–µ–Ω–¥–∞–ø'
                    ),
                },
            ),
            TemplateCategoryRestrictedByUserID(
                id=2,
                name='üÜò –¢–ü',
                templates={
                    'without_hashtag': DrawingTemplateRestrictedByRole(
                        SupportMessageWithoutHashtagTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –í—Ä–µ–º—è\n"
                        "üìå –°—É–º–º–∞\n"
                        "üìå –î–æ–º–µ–Ω —Å–∞–π—Ç–∞\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13:00 \n4999\ntheatre.com`",

                        '# –ë–µ–∑ —Ä–µ—à–µ—Ç–∫–∏',
                        preview_images=[
                            'assets/img/support_worker/without_hashtag_example_1.png',
                            'assets/img/support_worker/without_hashtag_example_2.png',
                        ]
                    ),
                    'with_hashtag': DrawingTemplateRestrictedByRole(
                        SupportMessageWithRedundantHashtagTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –í—Ä–µ–º—è\n"
                        "üìå –°—É–º–º–∞\n"
                        "üìå –î–æ–º–µ–Ω —Å–∞–π—Ç–∞\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13:00 \n4999\ntheatre.com`",

                        '# –õ–∏—à–Ω—è—è —Ä–µ—à–µ—Ç–∫–∞',
                        preview_images=[
                            'assets/img/support_worker/with_hashtag_example_1.png',
                            'assets/img/support_worker/with_hashtag_example_2.png',
                        ]
                    ),
                    'without_order_n': DrawingTemplateRestrictedByRole(
                        SupportWithoutOrderNumberTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –í—Ä–µ–º—è\n"
                        "üìå –°—É–º–º–∞\n"
                        "üìå –î–æ–º–µ–Ω —Å–∞–π—Ç–∞\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13:00 \n4999\ntheatre.com`",

                        '–ù–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä',
                        preview_images=[
                            'assets/img/support_worker/without_order_num_example.png',
                        ]
                    ),
                    'refund_terms': DrawingTemplateRestrictedByRole(
                        SupportRefundTermsTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –í—Ä–µ–º—è\n"
                        "üìå –î–æ–º–µ–Ω —Å–∞–π—Ç–∞\n\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13:00 \ntheatre.com`",

                        '–£—Å–ª–æ–≤–∏—è –í–ó',
                        preview_images=[
                            'assets/img/support_worker/refund_terms_example_1.png',
                            'assets/img/support_worker/refund_terms_example_2.png',
                        ]
                    )
                }
            ),
            TemplateCategoryRestrictedByRole(
                id=3,
                name='üåê –°–∞–π—Ç',
                templates={
                    # 'note': DrawingTemplateRestrictedByRole(
                    #     PaymentSystemNoteTemplate,
                    #     '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                    #     '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                    #     '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                    #     'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',
                    #     '–ü–æ–ª–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ',
                    #     preview_images=['assets/img/payment_sys/note_example.png']
                    # ),
                    'refund_success': DrawingTemplateRestrictedByRole(
                        PaymentSystemRefundSuccessTemplate,
                        '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                        '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                        '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                        'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',

                        '–£—Å–ø–µ—Ö –í–ó',
                        preview_images=['assets/img/payment_sys/refund_success.PNG']
                    ),
                    'non_equivalently': DrawingTemplateRestrictedByRole(
                        PaymentSystemNonEquivalently,
                        '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                        '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                        '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                        'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',

                        '–ù–µ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç',
                        preview_images=['assets/img/payment_sys/not_equivalently.PNG']
                    ),
                    'transaction_restricted': DrawingTemplateRestrictedByRole(
                        PaymentSystemTransactionRestricted,
                        '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                        '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                        '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                        'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',

                        '900',
                        preview_images=['assets/img/payment_sys/transaction_restricted.PNG']
                    ),
                    'unknown_error': DrawingTemplateRestrictedByRole(
                        PaymentSystemUnknownError,
                        '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                        '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                        '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                        'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',

                        '–ù–µ–∏–∑–≤–µ—Ç—Å–Ω–∞—è –æ—à–∏–±–∫–∞',
                        preview_images=['assets/img/payment_sys/unknown_error.PNG']
                    ),
                    'card_not_supported': DrawingTemplateRestrictedByRole(
                        PaymentSystemCardNotSupported,
                        '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                        '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                        '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                        'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',

                        '–ö–∞—Ä—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è',
                        preview_images=['assets/img/payment_sys/card_not_supported.PNG']
                    ),
                    'incorrect_order_number': DrawingTemplateRestrictedByRole(
                        PaymentSystemIncorrectOrderNumber,
                        '*üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏*\n\n'
                        '‚ÑπÔ∏è _*–¢–µ–ø–µ—Ä—å —à–∞–±–ª–æ–Ω—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω—è—é—Ç –¥–æ–º–µ–Ω –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, '
                        '–æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è*_\n\n'
                        'üîé *–ü—Ä–∏–º–µ—Ä:* `13:00`',

                        '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä',
                        preview_images=['assets/img/payment_sys/incorrect_order_number.PNG']
                    ),

                }
            ),
            TemplateCategoryRestrictedByRole(
                id=4,
                name='üè¶ –ë–∞–Ω–∫',
                templates={
                    'tinkoff_income': DrawingTemplateRestrictedByRole(
                        TinkoffIncomePaymentTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –í—Ä–µ–º—è\n"
                        "üìå –°—É–º–º–∞\n"
                        "üìå –î–∞—Ç–∞\n"
                        "üìå –ò–º—è\n"
                        "üìå –ò–º—è –ø–ª–∞—Ç–µ–∂–∞\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13:31 \n4999\n25.04\n–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤\n–ü–ª–∞—Ç–µ–∂–∏`",

                        '–¢–∏–Ω—å–∫–æ—Ñ –ø–æ–ª—É—á–µ–Ω–∏–µ',
                    ),
                    'tinkoff_outcome': DrawingTemplateRestrictedByRole(
                        TinkoffOutgoingPaymentTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –í—Ä–µ–º—è\n"
                        "üìå –°—É–º–º–∞\n"
                        "üìå –ë–∞–ª–∞–Ω—Å\n"
                        "üìå –ö–∞—Ä—Ç–∞\n"
                        "üìå –ò–º—è\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13:31 \n4999\n50000\n2222333344445555\n–ò. –í. –ò–≤–∞–Ω–æ–≤`",

                        '–¢–∏–Ω—å–∫–æ—Ñ –ø–µ—Ä–µ–≤–æ–¥',
                    ),
                }
            ),
            TemplateCategoryRestrictedByRole(
                id=5,
                name='üì£ –°–∞–ø–ø–æ—Ä—Ç',
                templates={
                    'guarantee_default': DrawingTemplateRestrictedByRole(
                        DefaultGuaranteeLetterTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –î–∞—Ç–∞\n"
                        "üìå –ì–æ–¥\n"
                        "üìå –ò–Ω–∏—Ü–∏–∞–ª—ã —Å–∞–ø–ø–æ—Ä—Ç–∞\n"
                        "üìå –ò–Ω–∏—Ü–∏–∞–ª—ã –º–∞–º–æ–Ω—Ç–∞\n"
                        "üìå –°—É–º–º–∞\n"
                        "üìå –°–∞–π—Ç\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13 –î–µ–∫. \n23\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω\n–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤\n4999\ntheatre.com`",

                        'üìú –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–µ –æ–±—ã—á–Ω–æ–µ',
                        role_id_list=UserRoles.SUPER_ROLE_ID_LIST,
                        preview_images=['assets/img/support/guarantee_letter_default_example.png']
                    ),
                    'guarantee_cb': DrawingTemplateRestrictedByRole(
                        CbGuaranteeLetterTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –î–∞—Ç–∞\n"
                        "üìå –ì–æ–¥\n"
                        "üìå –ò–Ω–∏—Ü–∏–∞–ª—ã –º–∞–º–æ–Ω—Ç–∞\n"
                        "üìå –°—É–º–º–∞\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`13 –î–µ–∫. \n23\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω\n4999`",

                        'üè¶ –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–µ –¶–ë',
                        role_id_list=UserRoles.SUPER_ROLE_ID_LIST,
                        preview_images=['assets/img/support/guarantee_letter_cb_example.png']
                    ),
                    'refund_status': DrawingTemplateRestrictedByRole(
                        RefundStatusTemplate,
                        "üìù –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏\n\n"
                        "–§–æ—Ä–º–∞—Ç: \n\n"
                        "üìå –î–∞—Ç–∞\n"
                        "üìå –ò–Ω–∏—Ü–∏–∞–ª—ã –º–∞–º–æ–Ω—Ç–∞\n"
                        "üìå –ü—Ä–∏—á–∏–Ω–∞\n"
                        "–ü—Ä–∏–º–µ—Ä: \n\n"
                        "`20.12.2023\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω\n–ó–∞–ø—Ä–æ—Å –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–ª–∏–µ–Ω—Ç–æ–º`",

                        '‚ôªÔ∏è –°—Ç–∞—Ç—É—Å –≤–æ–∑–≤—Ä–∞—Ç–∞',
                        role_id_list=UserRoles.SUPER_ROLE_ID_LIST,
                        preview_images=['assets/img/support/refund_status_example.png']
                    ),
                },
                role_id_list=UserRoles.SUPER_ROLE_ID_LIST
            ),
        ]
    }

    @classmethod
    async def _get_keyboard(cls, user: User, session: AsyncSession, **kwargs):
        available_categories_for_user = {
            category_name: category
            for category_name, category in cls.categories.items()
            if await category.check_access(user=user, session=session)
        }

        keyboard_markup = InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(text=category.name,
                                     callback_data=cls._generate_callback('open_cat', category_name))
            ]
                for category_name, category in available_categories_for_user.items()
            ],
            row_width=1
        )
        return keyboard_markup

    @classmethod
    async def open_category(cls, call: CallbackQuery, state: FSMContext, session: AsyncSession, **kwargs):
        if 'category' in kwargs:
            category_name = kwargs.pop('category')
        else:
            _, _, category_name = call.data.split(':', maxsplit=2)

        current_category = cls.categories.get(category_name)

        if not current_category:
            await call.message.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –¥–æ–±–∞–≤–ª—è—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                                [InlineKeyboardButton(text=template.name,
                                                      callback_data=cls._generate_callback('set_tpl', category_name,
                                                                                           template_id))]
                                for template_id, template in current_category.templates.items()
                            ] + [[InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='goto:DrawWizardMenu')]]
            # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        )
        await call.message.answer(
            text='*üé® –í—ã–±–µ—Ä–∏ —à–∞–±–ª–æ–Ω*',
            reply_markup=keyboard,
            parse_mode=cls.parse_mode
        )
        await call.message.delete()

    @classmethod
    async def set_template(cls, call: CallbackQuery, state: FSMContext, session: AsyncSession, **kwargs):
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —à–∞–±–ª–æ–Ω–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
        _, _, category_name, template_name = call.data.split(':', maxsplit=3)
        current_category = cls.categories.get(category_name)
        current_template = current_category.templates.get(template_name)

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await state.set_state(TemplateState.key)
        await state.set_state(WAITING_TICKET_DATA)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(selected_ticket_template=current_template)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∞–±–ª–æ–Ω

        backward_keyboard = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥',
                                                   callback_data=f'goto:DrawWizardMenu:category={current_category.name}')]]
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        if current_template.preview_images:
            if len(current_template.preview_images) > 1:
                media = [
                    InputMediaPhoto(
                        media=img_path,
                        caption=current_template.description if img_id == 0 else None,
                        parse_mode='MARKDOWNV2'
                    )
                    for img_id, img_path in enumerate(current_template.preview_images)
                ]
                await call.message.answer_media_group(media)
            else:
                await call.message.answer_photo(
                    photo=FSInputFile(current_template.preview_images[0]),
                    reply_markup=backward_keyboard,
                    parse_mode='MARKDOWNV2',
                    caption=current_template.description
                )
            await call.message.delete()
        else:
            await call.message.edit_text(
                text=current_template.description,
                parse_mode='MARKDOWNV2',
                reply_markup=backward_keyboard
            )

    @classmethod
    async def generate_image(cls, message: Message, state: FSMContext, session: AsyncSession, **kwargs):
        ticket_data = message.text.split('\n')
        data = await state.get_data()
        selected_template = data.get('selected_ticket_template')

        if not selected_template or selected_template == '–Ω–µ –≤—ã–±—Ä–∞–Ω':
            await message.reply(text='<b>‚õîÔ∏è –®–∞–±–ª–æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω</b>', parse_mode='HTML')
            return

        if not isinstance(selected_template, DrawingTemplate):
            await message.reply(
                text='<b>‚õîÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω</b>',
                parse_mode='HTML'
            )
            return

        try:
            drawing_template: Type[TicketTemplateT] = selected_template.template_drawer_cls(*ticket_data, session)
            print(drawing_template)
        except TypeError as e:
            print(e)
            await message.reply(
                text='<b>‚õîÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö</b>',
                parse_mode='HTML'
            )
            return

        try:
            drawing_result = await drawing_template.generate()  # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç BytesIO
            logging.info(f"drawing_result type: {type(drawing_result)}")  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø

            if isinstance(drawing_result, list):
                media = [InputMediaPhoto(media=raw_image) for raw_image in drawing_result]
                await message.answer_media_group(media)
            elif isinstance(drawing_result, io.BytesIO):
                drawing_result.seek(0)  # –°–±—Ä–æ—Å–∏—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–∞—á–∞–ª–æ
                # –°–æ–∑–¥–∞–µ–º BufferedInputFile —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º BytesIO
                buffered_file = BufferedInputFile(drawing_result.read(), filename='drawing.png')
                await message.answer_photo(buffered_file, caption='Here is your drawing!')
            else:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ drawing_result –æ–∂–∏–¥–∞–µ—Ç—Å—è –∫–∞–∫ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ URL
                await message.answer_photo(BufferedInputFile(drawing_result.read(), filename='drawing.png'), caption='Here is your drawing!')

        except Exception as e:
            logging.error(f"Error generating image: {e}")
            await message.reply(text='<b>‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>', parse_mode='HTML')
        finally:
            pass  # –ó–¥–µ—Å—å –Ω–µ –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    @classmethod
    async def hook_process_backward_buttons(cls, call: CallbackQuery, state: FSMContext, context):
        if 'category' in context:
            await cls.open_category(call, state, **context)
            raise StopRender

    @classmethod
    def register_handlers(cls, dp: Dispatcher):
        dp.register_callback_query_handler(
            cls.open_category,
            lambda call: call.data.startswith(cls._generate_callback('open_cat')),
            state='*'
        )
        dp.register_callback_query_handler(
            cls.set_template,
            lambda call: call.data.startswith(cls._generate_callback('set_tpl')),
            state='*'
        )
        dp.register_message_handler(
            cls.generate_image,
            state=WAITING_TICKET_DATA
        )

        # Handler for backward navigation
        dp.register_callback_query_handler(
            cls.hook_process_backward_buttons,
            lambda call: call.data.startswith('goto:'),
            state='*'
        )

    @classmethod
    def setup_hooks(cls):
        cls.set_hook(MenuHook.BeforeRender, cls.hook_process_backward_buttons)
